buildscript {
	ext {
		springBootVersion = '1.5.12.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.alexjamesmalcolm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

test {
	if(System.env["JDBC_DATABASE_URL"] == null) {
		environment "JDBC_DATABASE_URL", DATABASE_URL
	}
	if(System.env["CLIENT_ID"] == null) {
		environment "CLIENT_ID", CLIENT_ID
	}
	if(System.env["CLIENT_SECRET"] == null) {
		environment "CLIENT_SECRET", CLIENT_SECRET
	}
}

ext {
	springCloudVersion = 'Edgware.SR3'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
	compile('org.springframework.cloud:spring-cloud-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('org.postgresql:postgresql')
	testRuntime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}